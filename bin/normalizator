#!/usr/bin/env php
<?php

declare(strict_types=1);

// Check PHP version.
if (\PHP_VERSION_ID < 80100) {
    fwrite(STDERR, "Error: Normalizator requires PHP 8.1 or greater. Please update your PHP version to run Normalizator.\n");

    exit(1);
}

// Check required PHP extensions.
foreach (['fileinfo', 'intl', 'mbstring', 'phar'] as $extension) {
    if (!extension_loaded($extension)) {
        fwrite(STDERR, sprintf("Error: PHP extension ext-%s is required to run Normalizator.\n", $extension));

        exit(1);
    }
}

// Find autoloader file.
$files = [
    // When in a standalone Git repository.
    __DIR__ . '/../vendor/autoload.php',
    // When in vendor/petk/normalizator.
    __DIR__ . '/../../../autoload.php',
];

foreach ($files as $file) {
    if (file_exists($file)) {
        $autoloader = $file;

        break;
    }
}

if (!isset($autoloader)) {
    throw new \RuntimeException('Autoloader autoload.php not found.');
}

require $autoloader;

use Normalizator\Console\Application;
use Normalizator\Console\Command\CheckCommand;
use Normalizator\Console\Command\FixCommand;
use Normalizator\Console\Command\SelfUpdateCommand;
use Normalizator\Normalizator;
use Normalizator\Util\Timer;

$container = require_once __DIR__ . '/../config/container.php';

// Start script execution timer.
$container->get(Timer::class)->start();

$application = new Application('Normalizator', Normalizator::VERSION);

$application->add($container->get(CheckCommand::class));
$application->add($container->get(FixCommand::class));
$application->add($container->get(SelfUpdateCommand::class));

$application->run();
